language: java
sudo: false # faster builds

env:
  global:
    - DEV_BRANCH=dev
    - RELEASE_BRANCH=master
    - REPO=ebx/ebx-linkedin-sdk
    - NO_COLOUR='\033[0m'
    - RED_COLOUR='\033[0;31m'
    - GREEN_COLOUR='\033[0;32m'

## Export GPG details for Maven Central signing and extract the version
before_install:
  - export SOURCE_BRANCH_NAME=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi) 
  - echo $GPG_SECRET_KEYS | base64 --decode | $GPG_EXECUTABLE --import
  - echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust
  - export MVN_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout|grep -v '\[')
  - |
    #Ensure the project verison is valid
    if ! [[ $MVN_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
      printf "${RED_COLOUR}The extracted project version '$MVN_VERSION' was not valid.${NO_COLOUR}\n"
      travis_terminate 1;
    fi 
    if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
      printf "${GREEN_COLOUR}Building base branch $SOURCE_BRANCH_NAME which is at version $MVN_VERSION.${NO_COLOUR}\n"
    else
      #Get the PR title
      export PR_TITLE=$(curl -s https://api.github.com/repos/$REPO/pulls/$TRAVIS_PULL_REQUEST | grep -Po '(?<="title":[[:space:]]")[^"]*(?=",)')
    
      printf "${GREEN_COLOUR}Building PR $PR_TITLE from branch $SOURCE_BRANCH_NAME (into $TRAVIS_BRANCH)${NO_COLOUR}\n"
      
      ##Ensure the PR name matches our expected format
      ##if ! [[ $PR_TITLE =~ ^[A-Z]{2,4}-[0-9]+[[:space:]].+$ ]]; then
      ##  printf "${RED_COLOUR}PR title '$PR_TITLE' does not match the expected format 'GH-[xxxx] [description]'${NO_COLOUR}\n"
      ##  travis_terminate 1;
      ##fi
      
      #Ensure PR cannot be into master, unless it's coming from dev
      if [ "$TRAVIS_BRANCH" == "$RELEASE_BRANCH" ] && [ "$SOURCE_BRANCH_NAME" != "$DEV_BRANCH" ]; then
        printf "${RED_COLOUR}Build failed as PR target is master. Please ensure you use $DEV_BRANCH as the target.${NO_COLOUR}\n"
        travis_terminate 1;
      fi
    fi

## If this is not master we dynamically set the version to a snapshot
install:
  |
  if [ "$SOURCE_BRANCH_NAME" != "$RELEASE_BRANCH" ]; then 
    mvn versions:set -q -DnewVersion=$MVN_VERSION-SNAPSHOT
    export MVN_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout|grep -v '\[')
    printf "${GREEN_COLOUR}Build version modified to $MVN_VERSION as this is not the $RELEASE_BRANCH branch.${NO_COLOUR}\n"
  fi

## For DEV and MASTER deploy to maven central (DEV will always be a snapshot)
## All other builds are simply verified
script:
  | 
  if [ "$SOURCE_BRANCH_NAME" == "$RELEASE_BRANCH" ] || [ "$SOURCE_BRANCH_NAME" == "$DEV_BRANCH" ]; then
    printf "${GREEN_COLOUR}Performing deploy build to maven central.${NO_COLOUR}\n"
    mvn clean deploy --settings .maven.xml -B -U -Prelease
  else
    printf "${GREEN_COLOUR}Performing a PR verify build. Releases are only created from $DEV_BRANCH and $RELEASE_BRANCH branches.${NO_COLOUR}\n"
    mvn clean verify
  fi
  
after_failure:
  - cat target/surefire-reports/*.txt

## Prepare the release for Github
## Ensure we have a suitable git tag for the release based on the verison number
before_deploy:
  # Set up git user name and tag this commit
  - git config --local user.name "MarcFletcher"
  - git config --local user.email "marc@echobox.com"
  - export DEPLOY_TAG=${v$MVN_VERSION}
  - git tag $DEPLOY_TAG
  
## Create the release in Github
deploy:
  provider: releases
  api_key:
    secure: LtqM1MYEAj2LBgznSSJUQaM0Tl0Gny37LGgLUNF4yGGoz+ghjwXux7+W8BlR9Fid/CzaoW+Nr4074NfD5N0kz52iHJCHxrcvVuUPYdcNdfne7Rc+MdsXxb8QwUrmYLh5ay1Xtquy9MW1zya7Z1Y3oibvT5wpi/yKhxH5o8pdTZlqSkVgwBMFC8+Z38Dmz09nHYGPpFB7cAW5DtRIqf9qjsd/h7wwItwRWbUQuxuZ4SV/tvqjb4Hppbf3RU9163Q1WteUTx21IX/6IcWZL6KCLJruUMeB22mHfbASHVTL3xg6Ot9P+cpk72rf2VvsvbcaTrUsee8Cyy6s1BBirP4vOKPk81N/mKYLGGbgtr6lYIEia22N01ZF+7lG0JoS+/ynr2HZ2Sa0y5Haxgv5qGD94fJuZ4etEQ5GXaBLkrJr2TtlWjPxP2yg8NYB6JnBA/OE6AnDMQ1lsrZcUjav6oABjNuRqJfa+9zH3T9+nTSeixLmjjGf62+33UR9PZxncuEg8wGa2N9iPavBVEnyJ6yayALu4DskAjG/o7tsBi18u0PeXdjmcsF7hkL7h7XECx9cvdsSAqhdfEZyIosGrBpQqhxfyBzOLSqauxkVWisG6W9222s4EXmZMxja6QteVHQswx5ueXlUd8cGZ70d7s6Bw0gYibX3Ds1RGkQVeSblies=
  file: target/ebx-linkedin-sdk-$MVN_VERSION.jar
  skip_cleanup: true
  on:
    repo: ebx/ebx-linkedin-sdk
    branch: $RELEASE_BRANCH
  name: v$MVN_VERSION
  
cache:
  directories:
    - ~/.m2/repository